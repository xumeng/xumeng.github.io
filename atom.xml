<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Amon&#39;s Blog</title>
  
  <subtitle>猛猛如玉</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://amonxu.com/"/>
  <updated>2024-03-17T04:21:26.022Z</updated>
  <id>https://amonxu.com/</id>
  
  <author>
    <name>Amon</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>《游子》</title>
    <link href="https://amonxu.com/2024/02/07/zh-CN/2024-02-07-Go-Home/"/>
    <id>https://amonxu.com/2024/02/07/zh-CN/2024-02-07-Go-Home/</id>
    <published>2024-02-07T00:01:01.000Z</published>
    <updated>2024-03-17T04:21:26.022Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://pic3.zhimg.com/v2-74eab3ea6cfe106c1e06a1f9eafe75a2_b.png" width="40%"></p><p>拖着行李箱的人们，</p><p>满载着一年的劳累，</p><p>穿过长长的铁道，</p><p>回到母亲怀内，</p><p>妈妈</p><p>我想再睡会</p><blockquote><p>2024.2.7 <a href="https://www.zhihu.com/search?q=腊月二十八&amp;search_source=Entity&amp;hybrid_search_source=Entity&amp;hybrid_search_extra={&quot;sourceType&quot;%3A&quot;answer&quot;%2C&quot;sourceId&quot;%3A3389717530}" target="_blank" rel="noopener">腊月二十八</a> 晨</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-74eab3ea6cfe106c1e06a1f9eafe75a2_b.png&quot; width=&quot;40%&quot;&gt;&lt;/p&gt;
&lt;p&gt;拖着行李箱的人们，&lt;/p&gt;
&lt;p&gt;满载着一年的劳累，&lt;/p&gt;
&lt;p&gt;穿过长长的铁道
      
    
    </summary>
    
      <category term="诗" scheme="https://amonxu.com/categories/%E8%AF%97/"/>
    
    
      <category term="诗" scheme="https://amonxu.com/tags/%E8%AF%97/"/>
    
      <category term="2024" scheme="https://amonxu.com/tags/2024/"/>
    
  </entry>
  
  <entry>
    <title>How to solve error on CentOS &quot;/lib64/libstdc++.so.6 version GLIBCXX_3.4.xx not found&quot;</title>
    <link href="https://amonxu.com/2023/10/11/en/2023-10-11-CentOS-Error-libstdc++.so.6-version-GLIBCXX_3.4.xx-not-found/"/>
    <id>https://amonxu.com/2023/10/11/en/2023-10-11-CentOS-Error-libstdc++.so.6-version-GLIBCXX_3.4.xx-not-found/</id>
    <published>2023-10-11T14:33:55.000Z</published>
    <updated>2024-03-16T14:41:48.282Z</updated>
    
    <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"><hr><p>My personal server uses <code>CentOS 7.9</code>, and there are often strange errors when deploying some AI applications.<br>For example, recently, an error was reported when deploying an application:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/lib64/libstdc++.so.6: version GLIBCXX_3.4.xx not found</span><br></pre></td></tr></table></figure><p>Online search for solutions, there are different opinions, either reinstall <code>gcc</code>, or recompile and install <code>libstdc++</code>,<code>export LD_LIBRARY_PATH</code> and so on.<br>Several attempts have failed, and there is no way to upgrade the os version. Finally, a suitable solution is found, and it’s worked for me.</p><ol><li>Find and display all packages that provide <code>libstdc++.so.6</code> as a library file through yum</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum provides libstdc++.so.6</span><br></pre></td></tr></table></figure><ol start="2"><li>Download new version <code>libstdc.so</code>.</li></ol><blockquote><p>NOTICE: Since I need version <code>3.4.22+</code>, so I can just update it to <code>3.4.26</code>.  Other versions are the same.</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/local/lib64</span><br><span class="line">sudo wget http://www.vuln.cn/wp-content/uploads/2019/08/libstdc.so_.6.0.26.zip</span><br><span class="line">unzip libstdc.so_.6.0.26.zip</span><br></pre></td></tr></table></figure><ol start="3"><li>Copy <code>libstdc++.so.6.0.26</code> to <code>/usr/lib64</code></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cp libstdc++.so.6.0.26 /usr/lib64</span><br><span class="line">cd /usr/lib64</span><br></pre></td></tr></table></figure><ol start="4"><li>Check the soft link version of <code>libstdc++.so.6</code>,</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls -l | grep libstdc++</span><br></pre></td></tr></table></figure><p>It may shows like this:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">libstdc++.so.6 -&gt;libstdc++.so.6.0.19</span><br></pre></td></tr></table></figure><ol start="5"><li>Remove /usr/lib64 original link libstdc++.so.6, you can backup it before remove.</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo rm libstdc++.so.6</span><br></pre></td></tr></table></figure><p>then, relink it. </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ln -s libstdc++.so.6.0.26 libstdc++.so.6</span><br></pre></td></tr></table></figure><ol start="6"><li>OK, check the newest link</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">strings /usr/lib64/libstdc++.so.6 | grep GLIBCXX</span><br></pre></td></tr></table></figure><p>It may shows like this:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">GLIBCXX_3.4</span><br><span class="line">...</span><br><span class="line">GLIBCXX_3.4.25</span><br><span class="line">GLIBCXX_3.4.26</span><br><span class="line">GLIBCXX_DEBUG_MESSAGE_LENGTH</span><br></pre></td></tr></table></figure><p>Well Done!</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;meta name=&quot;referrer&quot; content=&quot;no-referrer&quot;&gt;

&lt;hr&gt;
&lt;p&gt;My personal server uses &lt;code&gt;CentOS 7.9&lt;/code&gt;, and there are often strange errors wh
      
    
    </summary>
    
    
      <category term="Linux" scheme="https://amonxu.com/tags/Linux/"/>
    
      <category term="CentOS" scheme="https://amonxu.com/tags/CentOS/"/>
    
      <category term="gcc" scheme="https://amonxu.com/tags/gcc/"/>
    
      <category term="AI" scheme="https://amonxu.com/tags/AI/"/>
    
      <category term="C++" scheme="https://amonxu.com/tags/C/"/>
    
      <category term="transformer" scheme="https://amonxu.com/tags/transformer/"/>
    
      <category term="PyTorch" scheme="https://amonxu.com/tags/PyTorch/"/>
    
  </entry>
  
  <entry>
    <title>Hexo blog title include special symbols reports error</title>
    <link href="https://amonxu.com/2023/09/18/en/2023-09-03-Hexo-Title-Symbol-Error/"/>
    <id>https://amonxu.com/2023/09/18/en/2023-09-03-Hexo-Title-Symbol-Error/</id>
    <published>2023-09-18T05:42:55.000Z</published>
    <updated>2023-09-18T14:19:16.000Z</updated>
    
    <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"><hr><p>In my Hexo blog, when I include special symbols inside the title in posts, it reports this error:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ERROR Process failed: _posts/en/XXX.md</span><br><span class="line">YAMLException: incomplete explicit mapping pair; a key node is missed; or followed by a non-tabulated empty line at line 1, column 54:</span><br><span class="line">     ...  for Backend System Refactoring\: How to do backend system refac ...</span><br></pre></td></tr></table></figure></p><p><strong>Solution:</strong><br>Include the title in single quotes, like:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">title: &apos;How to read a book&apos;</span><br><span class="line">lang: en</span><br><span class="line">date: 2023-01-01</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;meta name=&quot;referrer&quot; content=&quot;no-referrer&quot;&gt;

&lt;hr&gt;
&lt;p&gt;In my Hexo blog, when I include special symbols inside the title in posts, it reports 
      
    
    </summary>
    
    
      <category term="Hexo" scheme="https://amonxu.com/tags/Hexo/"/>
    
      <category term="Blog" scheme="https://amonxu.com/tags/Blog/"/>
    
  </entry>
  
  <entry>
    <title>Best Practices for Backend System Refactoring: How to do backend system refactoring efficiently and with high quality</title>
    <link href="https://amonxu.com/2023/09/01/en/2023-09-01-Refactoring/"/>
    <id>https://amonxu.com/2023/09/01/en/2023-09-01-Refactoring/</id>
    <published>2023-09-01T14:10:33.000Z</published>
    <updated>2023-10-26T03:33:54.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://images.unsplash.com/photo-1491406213019-05b162a72c20?ixlib=rb-1.2.1&amp;ixid=eyJhcHBfaWQiOjEyMDd9&amp;auto=format&amp;fit=crop&amp;w=500&amp;q=60" alt="coverimg"></p><h3 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h3><p>As the company’s business experiences explosive growth, both the scale of requirements and the user base are rapidly expanding. This presents challenges to the system in terms of the three high (high performance, high concurrency, high availability), scalability, and maintainability. The old system, due to various limitations in its early design (such as the expertise of early participants, the foresight of architectural design, impatience of management, etc.), gradually becomes inadequate to meet current and future demands, exposing various issues. Developers find themselves dragging an old, worn-out car on the highway, which is a daunting task. In simpler terms, the codebase of the old system has become too problematic to fix, leading to a situation where developers either get buried in its issues or abandon the project altogether.</p><p>At this point, a common question arises: should we continue trying to patch the issues, or should we choose to refactor? Patching is simply not feasible, not in this lifetime. Refactoring, on the other hand, requires the courage of a true hero because it’s a complex and time-consuming task. Moreover, it can impact ongoing business development or even bring it to a standstill. Often, product managers and executives are not supportive because they only care about one thing: when will the next feature be ready? Everything else is your development team’s problem.</p><p>If you choose the path of refactoring, you must be prepared to see it through, no matter what. How can you ensure a successful refactoring from the get-go? Based on common practices in internet projects and my personal experience in refactoring projects, here is an outline of the common steps for refactoring systems of various sizes:</p><h3 id="Step-0-Convincing-Stakeholders"><a href="#Step-0-Convincing-Stakeholders" class="headerlink" title="Step 0: Convincing Stakeholders"></a>Step 0: Convincing Stakeholders</h3><p>Refactoring is not just the responsibility of the development team; it’s a collective effort involving the entire project team. Refactoring can improve the system’s performance, availability, and scalability, as well as optimize and streamline business processes to meet new demands. It requires a significant investment of resources and must have the support of stakeholders. Typically, this requires explaining the benefits and drawbacks of refactoring, as well as the critical issues that would arise if refactoring is not done. Once you have their support, the refactoring work can officially begin.</p><p>Participants: Technical Leader</p><h3 id="Step-1-Establish-Clear-Refactoring-Goals"><a href="#Step-1-Establish-Clear-Refactoring-Goals" class="headerlink" title="Step 1: Establish Clear Refactoring Goals"></a>Step 1: Establish Clear Refactoring Goals</h3><p>Refactoring is a long-term endeavor; it’s not something that can be completed in one or two iterations, or even within a few months. It requires a substantial investment of manpower, resources, time, and effort. So, what are our goals in this prolonged battle? Are we aiming to meet the system’s high-performance requirements through a more efficient architecture? Or do we want to enhance code quality through refactoring? Perhaps we aim to introduce new technologies and frameworks to upgrade the entire system or optimize business processes to address previously unmet requirements. Once you have clear goals, you can work purposefully.</p><p>Participants: Technical Leader, Architect</p><h3 id="Step-2-Define-the-Scope-of-Refactoring-and-Make-Predictions"><a href="#Step-2-Define-the-Scope-of-Refactoring-and-Make-Predictions" class="headerlink" title="Step 2: Define the Scope of Refactoring and Make Predictions"></a>Step 2: Define the Scope of Refactoring and Make Predictions</h3><p>Refactoring typically falls into several levels:</p><ul><li>Platform-level refactoring: Refactoring the entire platform, such as Alibaba transitioning from the LAMP stack to the Java platform.</li><li>System-level refactoring: Refactoring specific business systems, such as introducing microservices or SOA architecture to break down monolithic applications.</li><li>Architecture-level refactoring: Improving the existing architecture through adjustments and redesign, addressing architectural shortcomings, like decoupling business logic through layered design or introducing caching for improved concurrency.</li><li>Business-level refactoring: Addressing specific business requirements that cannot be met due to the limitations of the current system, often involving the refactoring of business processes or database structures.</li><li>Module/code-level refactoring: The most common form of refactoring, typically involving the use of design patterns, encapsulation, and code optimization to improve code structure and performance.</li></ul><p>Determine the level of refactoring required, the overall scope, and the technology stack for refactoring. Then, conduct a scientific assessment and estimation of the refactoring work. This includes identifying the costs, required resources, and time commitments, as well as assessing whether ongoing business requirements can be accommodated during the refactoring process. Once these predictions are established, you can provide stakeholders with a clear understanding, especially when they ask when new requirements can be delivered.</p><p>Participants: Technical Leader, Architect, Developers</p><h3 id="Step-3-Familiarize-Yourself-with-the-Old-System-and-Document-Business-Processes"><a href="#Step-3-Familiarize-Yourself-with-the-Old-System-and-Document-Business-Processes" class="headerlink" title="Step 3: Familiarize Yourself with the Old System and Document Business Processes"></a>Step 3: Familiarize Yourself with the Old System and Document Business Processes</h3><p>Refactoring is not about abandoning the old system; it’s about continuously working with it. Knowing your enemy is the key to victory. Refactoring not only requires a clear understanding of the new system’s goals and future, but also a deep familiarity with the old system, especially its pitfalls. At this stage, the participants in the refactoring project, especially those who worked on the old system, should document and organize information related to the old system’s business and technical details. This includes collecting documents such as design documents, technical documents, architecture diagrams, UML diagrams, and ER diagrams related to the system.</p><p>The following are common preparation tasks before refactoring the old system:</p><ul><li>Gathering information and documentation related to the old system, including design documents, technical documents, architectural diagrams, UML diagrams, ER diagrams, and other graphical materials.</li><li>Mapping and documenting business lines and processes, outlining projects and business flows, and documenting them.</li><li>Reviewing key code and database designs in the old system.</li></ul><p>Any issues or uncertainties should be addressed promptly through communication with relevant personnel from the business side, ensuring that problems are resolved early in the process.</p><p>Participants: Technical Leader, Architect, Developers</p><h3 id="Step-4-Database-Refactoring"><a href="#Step-4-Database-Refactoring" class="headerlink" title="Step 4: Database Refactoring"></a>Step 4: Database Refactoring</h3><p>If the refactoring involves changes to the database, database refactoring is typically the first step. Many refactoring initiatives are triggered by issues related to the database. During database refactoring, the deficiencies and obstacles in the old system’s database design are addressed. This may involve redesigning tables using normalization or denormalization techniques, considering sharding or partitioning strategies, and more.</p><p>Participants: DBA, Architect</p><h3 id="Step-5-Backend-System-Refactoring"><a href="#Step-5-Backend-System-Refactoring" class="headerlink" title="Step 5: Backend System Refactoring"></a>Step 5: Backend System Refactoring</h3><p>Before starting the backend system refactoring, it’s essential to have design and technical documentation in place, as mentioned earlier. Once these documents are finalized through discussions and planning, the architect can proceed with system architecture design, and backend developers can begin coding. This phase is often the most time-consuming and critical part of the refactoring process. The quality of the backend architecture directly affects the success of the refactoring, the quality of the business code, and the overall refactoring quality.</p><p>Due to the extended timeline of this phase and the fact that its results may not be immediately visible, Agile development methodologies are often used. This allows for iterative development, ensuring effective planning and continuous progress. The advantages of using iterations include:</p><ol><li>Effective planning and quantification of the entire refactoring process.</li><li>Visible achievements at each stage, preventing the team from getting stuck in a long refactoring process.</li><li>The ability to test or observe refactored parts promptly during iterations, allowing continuous learning and improvement.</li></ol><p>During backend system refactoring, it’s essential to have clear, quantifiable goals and standards. For example, defining the QPS (Queries Per Second) supported by various systems and business modules, the expected response times for interfaces, etc. This enables the team to focus on achieving these goals during refactoring.</p><p>Regular code reviews should also be conducted throughout the refactoring process to identify and address issues with the refactoring itself and the quality of the code. This helps prevent the introduction of poor designs or subpar code that could harm the entire system.</p><p>Participants: Technical Leader, Architect, Developers</p><h3 id="Step-6-Data-Migration-and-Verification"><a href="#Step-6-Data-Migration-and-Verification" class="headerlink" title="Step 6: Data Migration and Verification"></a>Step 6: Data Migration and Verification</h3><p>If database refactoring is part of the project, data migration becomes a crucial step. It generally involves two types of migration: full migration and incremental migration. Full migration transfers all data from the old system to the new one in one go, while incremental migration handles data created in the old system after full migration until the old system is retired. These migrations are typically scripted or programmed to avoid manual errors.</p><p>After migration, it’s essential to compare the data between the old and new systems. This comparison can also be automated through scripts or programs to identify discrepancies and perform any necessary adjustments or investigations.</p><p>Participants: DBA, Developers</p><h3 id="Step-7-System-Validation-Integration-and-Testing"><a href="#Step-7-System-Validation-Integration-and-Testing" class="headerlink" title="Step 7: System Validation, Integration, and Testing"></a>Step 7: System Validation, Integration, and Testing</h3><p>As the backend system refactoring progresses, scripts and programs should be developed to validate the business interfaces between the old and new systems. This ensures that issues in the refactoring process are detected promptly, and, if necessary, architectural and database adjustments can be made. Additionally, increasing unit test coverage during refactoring is highly beneficial.</p><p>Once the dependencies between systems and modules are resolved, integration testing can begin. Comprehensive testing, including functional testing, stability testing, performance testing, local testing, and simulating production environments, should be performed. Any issues identified during testing should be addressed, verified, and fixed to meet the standards required for a smooth release.</p><p>Participants: Architect, Developers, Testers</p><h3 id="Step-8-Gradual-Deployment-and-Monitoring"><a href="#Step-8-Gradual-Deployment-and-Monitoring" class="headerlink" title="Step 8: Gradual Deployment and Monitoring"></a>Step 8: Gradual Deployment and Monitoring</h3><p>When the backend system refactoring reaches a certain level of stability, it’s time to initiate gradual deployment. During this phase, only a portion of the traffic is directed to the new system. This allows for real-time tracking and analysis of logs and monitoring alarms. Any issues or anomalies can be addressed promptly. As confidence in the new system’s stability grows, the scope and volume of the deployment can be gradually increased. Continuous monitoring of logs and alarms should be maintained throughout this phase.</p><p>Participants: DevOps Team, Testers, Developers</p><h3 id="Step-9-System-Transition"><a href="#Step-9-System-Transition" class="headerlink" title="Step 9: System Transition"></a>Step 9: System Transition</h3><p>When it comes to transitioning to the new system, it’s crucial to have a well-defined transition plan in place. This plan should include detailed processes, workflows, and contingency plans, including rollback procedures in case unexpected issues arise. This step ensures that the transition is smooth and minimizes disruption to the business.</p><p>Participants: DevOps Team, Testers</p><h3 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h3><p>After completing the above steps, the system has undergone successful refactoring. However, it’s essential to understand that refactoring is a substantial undertaking, and even after the process, the system may not be flawless. Refactoring is not the endpoint but rather a new beginning.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;https://images.unsplash.com/photo-1491406213019-05b162a72c20?ixlib=rb-1.2.1&amp;amp;ixid=eyJhcHBfaWQiOjEyMDd9&amp;amp;auto=format&amp;amp;f
      
    
    </summary>
    
      <category term="Technology" scheme="https://amonxu.com/categories/Technology/"/>
    
    
      <category term="Architecture" scheme="https://amonxu.com/tags/Architecture/"/>
    
      <category term="System Design" scheme="https://amonxu.com/tags/System-Design/"/>
    
      <category term="Refactoring" scheme="https://amonxu.com/tags/Refactoring/"/>
    
  </entry>
  
  <entry>
    <title>《一个地方，人满为患》</title>
    <link href="https://amonxu.com/2023/07/22/zh-CN/2023-07-22-Hospital/"/>
    <id>https://amonxu.com/2023/07/22/zh-CN/2023-07-22-Hospital/</id>
    <published>2023-07-21T17:01:01.000Z</published>
    <updated>2023-09-04T09:48:50.000Z</updated>
    
    <content type="html"><![CDATA[<p>里面，</p><p>取号，<br>排队，<br>叫号，<br>付费。</p><p>一切为了活着。</p><hr><p>外面，</p><p>工作，<br>生活，<br>享乐，<br>受罪。</p><p>活着为了一切。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;里面，&lt;/p&gt;
&lt;p&gt;取号，&lt;br&gt;排队，&lt;br&gt;叫号，&lt;br&gt;付费。&lt;/p&gt;
&lt;p&gt;一切为了活着。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;外面，&lt;/p&gt;
&lt;p&gt;工作，&lt;br&gt;生活，&lt;br&gt;享乐，&lt;br&gt;受罪。&lt;/p&gt;
&lt;p&gt;活着为了一切。&lt;/p&gt;

      
    
    </summary>
    
      <category term="诗" scheme="https://amonxu.com/categories/%E8%AF%97/"/>
    
    
      <category term="诗" scheme="https://amonxu.com/tags/%E8%AF%97/"/>
    
      <category term="2023" scheme="https://amonxu.com/tags/2023/"/>
    
  </entry>
  
  <entry>
    <title>《我》</title>
    <link href="https://amonxu.com/2023/04/07/zh-CN/2023-04-07-My-King/"/>
    <id>https://amonxu.com/2023/04/07/zh-CN/2023-04-07-My-King/</id>
    <published>2023-04-06T17:01:01.000Z</published>
    <updated>2023-09-04T09:49:04.000Z</updated>
    
    <content type="html"><![CDATA[<p>早高峰的洪流中，<br>我被人群簇拥着，<br>仿佛生命之王。</p><p>我感觉自己，<br>活着。<br>但又感觉，<br>死了。</p><blockquote><p>ChatGPT辅助创作</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;早高峰的洪流中，&lt;br&gt;我被人群簇拥着，&lt;br&gt;仿佛生命之王。&lt;/p&gt;
&lt;p&gt;我感觉自己，&lt;br&gt;活着。&lt;br&gt;但又感觉，&lt;br&gt;死了。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;ChatGPT辅助创作&lt;/p&gt;
&lt;/blockquote&gt;

      
    
    </summary>
    
      <category term="诗" scheme="https://amonxu.com/categories/%E8%AF%97/"/>
    
    
      <category term="诗" scheme="https://amonxu.com/tags/%E8%AF%97/"/>
    
      <category term="2023" scheme="https://amonxu.com/tags/2023/"/>
    
  </entry>
  
  <entry>
    <title>How to solve error GitHub Permission denied fatal Could not read from remote repository</title>
    <link href="https://amonxu.com/2023/01/01/en/2023-01-01-GitHub-Permission-denied-fatal-Could-not-read-from-remote-repository/"/>
    <id>https://amonxu.com/2023/01/01/en/2023-01-01-GitHub-Permission-denied-fatal-Could-not-read-from-remote-repository/</id>
    <published>2023-01-01T03:23:55.000Z</published>
    <updated>2024-03-17T04:15:36.380Z</updated>
    
    <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"><hr><p>There are multiple Git libraries are used on my machine, such as GitHub/Company Private Git repo, etc., the Git tool mainly uses Terminal and GitKraken, and occasionally strange issues will arise. For example, the following error occurred when deploying the Hexo Blog a few days ago:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Permission denied (publickey).</span><br><span class="line">fatal: Could not read from remote repository.</span><br><span class="line"></span><br><span class="line">Please make sure you have the correct access rights</span><br><span class="line">and the repository exists.</span><br></pre></td></tr></table></figure><p>The usual solution is to regenerate the SSH Key of GitHub.</p><p>But there’s no issue with my local configuration, I can push code normally in Terminal and GitKraken.</p><p>Guessing that there might be some hitch in the process, I used:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><p>And saw:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Hi &#123;username&#125;! You&apos;ve successfully authenticated, but GitHub does not provide shell access.</span><br></pre></td></tr></table></figure><p>Then redeployed and pushed, It’s worked!</p><p>Reference:</p><blockquote><p><a href="https://docs.github.com/en/authentication/troubleshooting-ssh/error-permission-denied-publickey" target="_blank" rel="noopener">https://docs.github.com/en/authentication/troubleshooting-ssh/error-permission-denied-publickey</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;meta name=&quot;referrer&quot; content=&quot;no-referrer&quot;&gt;

&lt;hr&gt;
&lt;p&gt;There are multiple Git libraries are used on my machine, such as GitHub/Company Privat
      
    
    </summary>
    
    
      <category term="Hexo" scheme="https://amonxu.com/tags/Hexo/"/>
    
      <category term="Git" scheme="https://amonxu.com/tags/Git/"/>
    
      <category term="GitHub" scheme="https://amonxu.com/tags/GitHub/"/>
    
      <category term="ssh" scheme="https://amonxu.com/tags/ssh/"/>
    
  </entry>
  
  <entry>
    <title>解决错误 GitHub Permission denied fatal Could not read from remote repository</title>
    <link href="https://amonxu.com/2023/01/01/zh-CN/2023-01-01-GitHub-Permission-denied-fatal-Could-not-read-from-remote-repository/"/>
    <id>https://amonxu.com/2023/01/01/zh-CN/2023-01-01-GitHub-Permission-denied-fatal-Could-not-read-from-remote-repository/</id>
    <published>2023-01-01T03:23:55.000Z</published>
    <updated>2024-03-17T04:02:10.650Z</updated>
    
    <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"><hr><p>机器上使用了多个 Git 库，比如 GitHub/公司 Git 库等，Git 工具主要使用 Terminal 和 GitKraken，偶尔会出现奇怪的问题。比如前两天在部署 Hexo Blog 时，遇到以下报错：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Permission denied (publickey).</span><br><span class="line">fatal: Could not read from remote repository.</span><br><span class="line"></span><br><span class="line">Please make sure you have the correct access rights</span><br><span class="line">and the repository exists.</span><br></pre></td></tr></table></figure><p>通常的解决方案是重新生成 GitHub 的 SSH Key。</p><p>但是我本地的配置是没问题的，可以在 Terminal 和GitKraken正常提交代码。</p><p>猜想可能是哪个环节不通，于是使用：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><p>看到：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Hi &#123;username&#125;! You&apos;ve successfully authenticated, but GitHub does not provide shell access.</span><br></pre></td></tr></table></figure><p>再重新部署提交，搞定！</p><p>参考：</p><blockquote><p><a href="https://docs.github.com/en/authentication/troubleshooting-ssh/error-permission-denied-publickey" target="_blank" rel="noopener">https://docs.github.com/en/authentication/troubleshooting-ssh/error-permission-denied-publickey</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;meta name=&quot;referrer&quot; content=&quot;no-referrer&quot;&gt;

&lt;hr&gt;
&lt;p&gt;机器上使用了多个 Git 库，比如 GitHub/公司 Git 库等，Git 工具主要使用 Terminal 和 GitKraken，偶尔会出现奇怪的问题。比如前两天在部署
      
    
    </summary>
    
    
      <category term="Hexo" scheme="https://amonxu.com/tags/Hexo/"/>
    
      <category term="Git" scheme="https://amonxu.com/tags/Git/"/>
    
      <category term="GitHub" scheme="https://amonxu.com/tags/GitHub/"/>
    
      <category term="ssh" scheme="https://amonxu.com/tags/ssh/"/>
    
  </entry>
  
  <entry>
    <title>《山 · 其二》</title>
    <link href="https://amonxu.com/2022/12/02/zh-CN/2022-12-02-Mountain/"/>
    <id>https://amonxu.com/2022/12/02/zh-CN/2022-12-02-Mountain/</id>
    <published>2022-12-01T17:01:01.000Z</published>
    <updated>2023-09-04T09:54:18.000Z</updated>
    
    <content type="html"><![CDATA[<p>任务堆积如山，<br>债务堆积如山，<br>茫茫一片看不见。</p><p>我，<br>堆积如山。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;任务堆积如山，&lt;br&gt;债务堆积如山，&lt;br&gt;茫茫一片看不见。&lt;/p&gt;
&lt;p&gt;我，&lt;br&gt;堆积如山。&lt;/p&gt;

      
    
    </summary>
    
      <category term="诗" scheme="https://amonxu.com/categories/%E8%AF%97/"/>
    
    
      <category term="诗" scheme="https://amonxu.com/tags/%E8%AF%97/"/>
    
      <category term="2022" scheme="https://amonxu.com/tags/2022/"/>
    
  </entry>
  
  <entry>
    <title>《山 · 其一》</title>
    <link href="https://amonxu.com/2022/12/01/zh-CN/2022-12-01-Mountain/"/>
    <id>https://amonxu.com/2022/12/01/zh-CN/2022-12-01-Mountain/</id>
    <published>2022-11-30T17:01:01.000Z</published>
    <updated>2023-09-04T09:54:22.000Z</updated>
    
    <content type="html"><![CDATA[<p>列车从远方，<br>卸下年轻人，<br>拉走父母妻儿，<br>和中老年。</p><p>他们身前，<br>是扬起的帆，<br>他们身后，<br>是累累的山。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;列车从远方，&lt;br&gt;卸下年轻人，&lt;br&gt;拉走父母妻儿，&lt;br&gt;和中老年。&lt;/p&gt;
&lt;p&gt;他们身前，&lt;br&gt;是扬起的帆，&lt;br&gt;他们身后，&lt;br&gt;是累累的山。&lt;/p&gt;

      
    
    </summary>
    
      <category term="诗" scheme="https://amonxu.com/categories/%E8%AF%97/"/>
    
    
      <category term="诗" scheme="https://amonxu.com/tags/%E8%AF%97/"/>
    
      <category term="2022" scheme="https://amonxu.com/tags/2022/"/>
    
  </entry>
  
  <entry>
    <title>《地铁》</title>
    <link href="https://amonxu.com/2022/11/30/zh-CN/2022-11-30-Metro-Train/"/>
    <id>https://amonxu.com/2022/11/30/zh-CN/2022-11-30-Metro-Train/</id>
    <published>2022-11-29T17:01:01.000Z</published>
    <updated>2023-09-04T09:54:26.000Z</updated>
    
    <content type="html"><![CDATA[<p>一头野兽，<br>在地下怒吼狂奔，<br>他吞掉情侣夫妻父母儿女，<br>吐出一个个沉默的打工人。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;一头野兽，&lt;br&gt;在地下怒吼狂奔，&lt;br&gt;他吞掉情侣夫妻父母儿女，&lt;br&gt;吐出一个个沉默的打工人。&lt;/p&gt;

      
    
    </summary>
    
      <category term="诗" scheme="https://amonxu.com/categories/%E8%AF%97/"/>
    
    
      <category term="诗" scheme="https://amonxu.com/tags/%E8%AF%97/"/>
    
      <category term="2022" scheme="https://amonxu.com/tags/2022/"/>
    
  </entry>
  
  <entry>
    <title>写于11月27日</title>
    <link href="https://amonxu.com/2022/11/27/zh-CN/2022-11-27-Date/"/>
    <id>https://amonxu.com/2022/11/27/zh-CN/2022-11-27-Date/</id>
    <published>2022-11-27T14:18:01.000Z</published>
    <updated>2023-09-04T09:54:28.000Z</updated>
    
    <content type="html"><![CDATA[<p>8年前的一天，在一家粤菜店吃不是饭点的午饭时，我一边品着大麦茶，一边对着左顾右盼着餐厅不多的客人。</p><p>餐厅播放着无聊的节目，但当我转头看向电子时钟，上面跳动着猩红色的数字：2014年11月27日。</p><p>恍惚间，这年这月这日组成这一串，于我陌生无比，不知是外星数字来了地球，还是我这地球人去了外星。</p><p>2-0-1-4，2014年？我印象中并没有这么个年，要说有的，大概是些刚毕业时上大学，刚高考完读高中，刚升高中读初中，升初中时读小学的那些年。</p><p>1-1-2-7，11月27日？还早呢。我并没有十一长假，也未曾过过中秋，说起端午，粽子也没吃过，五一呢，我倒没什么记忆深刻的事情。</p><p>现在，又是11月27日。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;8年前的一天，在一家粤菜店吃不是饭点的午饭时，我一边品着大麦茶，一边对着左顾右盼着餐厅不多的客人。&lt;/p&gt;
&lt;p&gt;餐厅播放着无聊的节目，但当我转头看向电子时钟，上面跳动着猩红色的数字：2014年11月27日。&lt;/p&gt;
&lt;p&gt;恍惚间，这年这月这日组成这一串，于我陌生无比，不知
      
    
    </summary>
    
      <category term="Note" scheme="https://amonxu.com/categories/Note/"/>
    
    
      <category term="随笔" scheme="https://amonxu.com/tags/%E9%9A%8F%E7%AC%94/"/>
    
      <category term="2022" scheme="https://amonxu.com/tags/2022/"/>
    
  </entry>
  
  <entry>
    <title>从优雅地查看K8s应用日志聊到日志管理</title>
    <link href="https://amonxu.com/2022/10/12/zh-CN/2022-10-12-K8S-Logs/"/>
    <id>https://amonxu.com/2022/10/12/zh-CN/2022-10-12-K8S-Logs/</id>
    <published>2022-10-12T13:00:01.000Z</published>
    <updated>2023-09-15T09:46:56.000Z</updated>
    
    <content type="html"><![CDATA[<p>曾不知在哪听过一经典名句：程序员的工作有两件事，一是写 Bug，二是找 Bug。</p><p>说归说笑归笑，奈何话糙理不糙：在程序员的工作中，Bug的排查分析和解决验证确实占相当可观的一部分时间。<br>那么说到，而在真正排查 Bug 时，才深刻体会到另一名句：不写日志一时爽，排查 Bug 火Z场。</p><p>日志管理，一直是开发人员的老大难题。这个老大难题，大致分为几块内容：</p><h3 id="1-打印日志"><a href="#1-打印日志" class="headerlink" title="1. 打印日志"></a>1. 打印日志</h3><p>狭义上的日志管理，也即打印日志。套用 3W1H 分析方法可以分为几个子问题：</p><ol><li>Why 为什么要打日志<br> 显而易见，日志是记录关键信息和数据的地方，以备未来排查问题和数据统计分析之用。</li><li><p>What 要打什么样的日志</p></li><li><p>Where/When 在哪里/什么时候打日志</p></li><li>How 怎么打日志</li></ol><h3 id="2-记录日志"><a href="#2-记录日志" class="headerlink" title="2. 记录日志"></a>2. 记录日志</h3><h3 id="3-查看日志"><a href="#3-查看日志" class="headerlink" title="3. 查看日志"></a>3. 查看日志</h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;曾不知在哪听过一经典名句：程序员的工作有两件事，一是写 Bug，二是找 Bug。&lt;/p&gt;
&lt;p&gt;说归说笑归笑，奈何话糙理不糙：在程序员的工作中，Bug的排查分析和解决验证确实占相当可观的一部分时间。&lt;br&gt;那么说到，而在真正排查 Bug 时，才深刻体会到另一名句：不写日志一
      
    
    </summary>
    
      <category term="Technology" scheme="https://amonxu.com/categories/Technology/"/>
    
    
      <category term="k8s" scheme="https://amonxu.com/tags/k8s/"/>
    
      <category term="log" scheme="https://amonxu.com/tags/log/"/>
    
      <category term="阿里云" scheme="https://amonxu.com/tags/%E9%98%BF%E9%87%8C%E4%BA%91/"/>
    
      <category term="docker" scheme="https://amonxu.com/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>《中国折叠》</title>
    <link href="https://amonxu.com/2022/08/18/zh-CN/2022-08-18-Folding-World/"/>
    <id>https://amonxu.com/2022/08/18/zh-CN/2022-08-18-Folding-World/</id>
    <published>2022-08-17T17:01:01.000Z</published>
    <updated>2023-09-04T09:54:36.000Z</updated>
    
    <content type="html"><![CDATA[<p>我折叠了中国，<br>因为我想你，<br>想你到突破几何距离。</p><p>广东和江西叠在一起，<br>你叠进我的身体。</p><blockquote><p>写给一对分隔粤赣两地的恋人</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;我折叠了中国，&lt;br&gt;因为我想你，&lt;br&gt;想你到突破几何距离。&lt;/p&gt;
&lt;p&gt;广东和江西叠在一起，&lt;br&gt;你叠进我的身体。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;写给一对分隔粤赣两地的恋人&lt;/p&gt;
&lt;/blockquote&gt;

      
    
    </summary>
    
      <category term="诗" scheme="https://amonxu.com/categories/%E8%AF%97/"/>
    
    
      <category term="诗" scheme="https://amonxu.com/tags/%E8%AF%97/"/>
    
      <category term="2022" scheme="https://amonxu.com/tags/2022/"/>
    
  </entry>
  
  <entry>
    <title>中国人民的老朋友——从书中人物的角度读 《红星照耀中国》</title>
    <link href="https://amonxu.com/2022/05/04/zh-CN/2022-05-04-Red-Star-Over-China/"/>
    <id>https://amonxu.com/2022/05/04/zh-CN/2022-05-04-Red-Star-Over-China/</id>
    <published>2022-05-04T10:21:21.000Z</published>
    <updated>2023-09-04T09:56:26.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://img2.doubanio.com/view/subject/l/public/s29109031.jpg" alt="cover" style="zoom: 50%;"></p><p>我们知道，对于一个外国人来说，在中国所能获得的最高荣誉，大概是：“中国人民的老朋友”。<br>而今天谈到这本书的作者埃德加·斯诺，正是其中一员。</p><p>理解这个人物并不太难，大致等于我们国内有个年轻人，20岁出头时奔赴一个贫穷落后、内忧外患、战乱丛生的国家当记者，且一干就是14年。另外当了2年大学讲师，结识了这个国家很多的名人名士。<br>该国内忧外患之际，内部派别纷争，他冒着枪林弹雨风险突破顽固派的封锁线，前往进步派的根据地采访，与进步派的领导人和平民们深入沟通交流，并为世界第一次呈现进步派在被顽固派多年的打压和封锁下的情况与精神面貌。<br>后来该国遭遇外部侵略战争，他积极活动参与该国的抗战解放斗争，著作了大量的进步书籍，向世界揭露进步派的真实形象。<br>等到胜利解放后，他又几次故国重游，受到广泛的热烈欢迎。他逝世时，甚至将部分骨灰撒在这个国家，许多该国领导人和名人都来参加安葬仪式。<br>这，大致就是斯诺与中国的渊源。</p><p>未完待续…</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;https://img2.doubanio.com/view/subject/l/public/s29109031.jpg&quot; alt=&quot;cover&quot; style=&quot;zoom: 50%;&quot;&gt;&lt;/p&gt;
&lt;p&gt;我们知道，对于一个外国人来说，在中国所能获得的最高
      
    
    </summary>
    
      <category term="书" scheme="https://amonxu.com/categories/%E4%B9%A6/"/>
    
    
      <category term="读书笔记" scheme="https://amonxu.com/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
      <category term="历史" scheme="https://amonxu.com/tags/%E5%8E%86%E5%8F%B2/"/>
    
      <category term="2022" scheme="https://amonxu.com/tags/2022/"/>
    
  </entry>
  
  <entry>
    <title>峥嵘岁月宏图起，东风荡，春来早</title>
    <link href="https://amonxu.com/2021/12/04/zh-CN/2021-12-04-Mao/"/>
    <id>https://amonxu.com/2021/12/04/zh-CN/2021-12-04-Mao/</id>
    <published>2021-12-04T13:00:01.000Z</published>
    <updated>2023-09-04T09:56:30.000Z</updated>
    
    <content type="html"><![CDATA[<p>革命江山风光好，红旗飘，干劲高，大地争艳，比学赶帮超。磊磊胸怀盛世界，私全抛，难不倒。</p><p>万里征途奋今朝，党领导，人年少，万紫千红竟妖娆。<strong>峥嵘岁月宏图起，东风荡，春来早。</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;革命江山风光好，红旗飘，干劲高，大地争艳，比学赶帮超。磊磊胸怀盛世界，私全抛，难不倒。&lt;/p&gt;
&lt;p&gt;万里征途奋今朝，党领导，人年少，万紫千红竟妖娆。&lt;strong&gt;峥嵘岁月宏图起，东风荡，春来早。&lt;/strong&gt;&lt;/p&gt;

      
    
    </summary>
    
      <category term="Note" scheme="https://amonxu.com/categories/Note/"/>
    
    
      <category term="诗" scheme="https://amonxu.com/tags/%E8%AF%97/"/>
    
      <category term="2021" scheme="https://amonxu.com/tags/2021/"/>
    
  </entry>
  
  <entry>
    <title>《Redis设计与实现》读后感</title>
    <link href="https://amonxu.com/2021/06/28/zh-CN/2021-06-28-Redis-Book/"/>
    <id>https://amonxu.com/2021/06/28/zh-CN/2021-06-28-Redis-Book/</id>
    <published>2021-06-28T14:00:01.000Z</published>
    <updated>2023-09-04T09:56:34.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://img1.doubanio.com/view/subject/l/public/s27297117.jpg" alt="img" style="zoom: 33%;"></p><p>认识这本书是好几年前了，那时候在一个胖胖哒同事桌前翻了几页；第一次看是3年前，看过几章大概到跳表那里；重新看完是3年后的今天，用时13时14分。</p><p>这本书确实是好书，以前对Redis的理解太过浅显（当然现在也未必多佳，但拜本书所赐，必不可同当年而语）。</p><p>书的结构非常好，从底层数据结构讲起，再到基本功能，高级功能，扩展功能。即使是每一节的内容，也非常有趣。从大致说明，基本用法，解释原理，数据结构图示，再到最后的总结。读来不觉乏味，这也和Redis本身清晰简洁的设计相符。</p><p>感谢本书作者，也感谢阅读中那些精彩的读者分享和讨论。 </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;https://img1.doubanio.com/view/subject/l/public/s27297117.jpg&quot; alt=&quot;img&quot; style=&quot;zoom: 33%;&quot;&gt;&lt;/p&gt;
&lt;p&gt;认识这本书是好几年前了，那时候在一个胖胖哒同事桌前翻了
      
    
    </summary>
    
      <category term="书" scheme="https://amonxu.com/categories/%E4%B9%A6/"/>
    
    
      <category term="读书笔记" scheme="https://amonxu.com/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
      <category term="Redis" scheme="https://amonxu.com/tags/Redis/"/>
    
      <category term="NoSQL" scheme="https://amonxu.com/tags/NoSQL/"/>
    
  </entry>
  
  <entry>
    <title>关于书包的事</title>
    <link href="https://amonxu.com/2021/06/03/zh-CN/2021-06-03-School-Bag/"/>
    <id>https://amonxu.com/2021/06/03/zh-CN/2021-06-03-School-Bag/</id>
    <published>2021-06-03T15:21:22.000Z</published>
    <updated>2023-09-04T09:56:36.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://pic2.zhimg.com/80/v2-c1183d4a75bb9d253caee6d1f379094a_1440w.jpg?source=1940ef5c" alt="img" style="zoom:67%;"></p><blockquote><p><em>（题图：书包与骨头，取自《阳光灿烂的日子》 &amp; 《2001太空漫游》）</em></p></blockquote><h2 id="一"><a href="#一" class="headerlink" title="一"></a>一</h2><p>小男孩跟随母亲，步行很远来到热闹的集市。母亲挤在拥挤的人群，对着两旁铺位的商品左顾右盼，男孩从人群的手臂和大腿中钻过，直到停在一家卖箱包的铺位前。男孩的头，刚好超出铺位，能看到上面整齐摆列的包。</p><p>老板是一个擅长使嘴的中年女人，来往的行人，不管男女老幼美丑富贫，都被她喋喋不休的嘴，说得不由流连驻足。男孩听过唾沫横飞之类的词语，但觉得唾沫不应该是横飞的，而是上下翻飞，从老板并不优美的嘴唇里蹦出，跳着并不优美的舞蹈。</p><p>男孩眼光还在被各式各样的书包吸引的目不暇接，但母亲已和老板开始了对价格的彼此试探，于是男孩眼看着心仪的书包们一一从货架上取了下来，又一一挂了回去。最终，一个样式略普通的书包幸运地留了下来，在母亲一阵并不利索的掏钱付款后，老板将包装好的书包拿给男孩。</p><p>男孩接过新书包，欢天喜地地抱在怀里，自然很快将刚才看过那些花花绿绿的书包，通通抛诸脑后。甚至不舍得现在立刻背上它，一定要等到开学的那天，才能享用。</p><h2 id="二"><a href="#二" class="headerlink" title="二"></a>二</h2><p>这是一块被压缩存储、且正处于被清理边缘的记忆。来源于周末忽然地，手洗儿童书包。</p><p>一个普通的儿童背包，布料、结构和拉锁都是扎实的，只有边角处曾被洗衣机绞出一个小洞。</p><p>很久没有仔细看过儿童书包，儿童书包的样式，也几十年也鲜有变化。两根带子，几个拉锁分出来不同的包，左右两个口袋，正面再印上小朋友时下喜欢的图案。一个书包就这样制造完毕。</p><p>在我记忆里，小时候书包的种类还有不少：双肩包、挎包、拉锁的、系绳的、粘带的等等，样式各异，价格也差距不小。</p><p>普通一点的书包，自然没什么好看的图案，大多是印着字，比如一个“派”字。每每看到都会疑惑这个派字是何含义，又不免联想到派出所、帮派之意，以致在集市卖书包的铺位上，总会仔细寻找有没有带有“警”或“帮”的书包，以验证自己不成熟的猜测。</p><p>直到初中学了几年英语，才终于明白“派”大抵是由“Style”翻译而来，至于为何不加个“头”，想来便是“派头”虽更容易理解，却无疑就多了一个字的制作成本。</p><p>除了“派”字书包，好一些的便是印有各种图案的书包，这种自然也贵一些，非家境殷实一些的不会买。图案多是些奥特曼、动画角色之类，类似现在的冰雪奇缘与超级飞侠之类。可惜我已忘却我有没有背过这种书包（大概是没有的）。小学时光最后留下的一个书包，是没有图案的系绳书包，我用它来把少时所有的“玩具”都装了进去。（这些玩具且值一提，见又一篇<a href="">《我的玩具史》</a>）</p><h2 id="三"><a href="#三" class="headerlink" title="三"></a>三</h2><p>这是另一个男孩的故事。王焱，哥哥名叫王垚，兄弟俩五行一个缺火、一个缺土。他们的母亲是一个精明讲究的女人，由为哥俩看生辰八字便可略知一二。除此之外，哥俩稍大了些，她独自带着两兄弟从乡下来到城里上学。</p><p>在城里租房子的同一院内，除了这俩上幼儿园和小学三年级的兄弟，另有一对初三的姐弟和一对高三的姐弟。王家兄弟继承了其母亲的精明，哥哥多了几分正经与狡猾，弟弟则多了些可爱与温柔。平日里大家多喜欢逗弟弟玩。</p><p>每天上学的早上，弟弟准时背上他硕大的书包，大到里面估计装进了他所有的东西，仰着他稚气的脸，一颠一颠地跟在他母亲的后面。他母亲一边赶着那辆不再崭新的自行车，一边对着屋子里的哥哥念念叨叨，嘱咐些什么，直至走出大门，方才听不到她的声音。</p><p>他母亲是不会帮他背书包的，仿佛只有让他背着这个远远超出他年龄的书包，他才能快速长大。每每此时，站在二楼往下看他们背影的我，那个高三的弟弟，总会眼睛跟着一颠一颠的书包，疑惑它里面究竟装了些什么。</p><h2 id="四"><a href="#四" class="headerlink" title="四"></a>四</h2><p>我本想同住院里一年半载，能竹筒倒豆搬出一些这哥俩的轶事，但到这里关于他们更多的，竟也憋不出一二。又想到，如今的王家弟弟年纪和我当时一样，在高三升大学的年纪，王家哥哥则应该已踏入社会。而我如今，打工人尔。</p><p>王家弟弟变成那时的我，我变成了那时他们的母亲，他们的母亲变成了那时我的母亲，我的孩子变成那时的他们。</p><p>我们都以为自己不会变，但不知不觉间还是变成了其他人。世界没有变，我们却说世界变了，我们没变。</p><p>—— 2021.6.4.夜</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;https://pic2.zhimg.com/80/v2-c1183d4a75bb9d253caee6d1f379094a_1440w.jpg?source=1940ef5c&quot; alt=&quot;img&quot; style=&quot;zoom:67%;&quot;&gt;&lt;/p&gt;
&lt;bloc
      
    
    </summary>
    
      <category term="鬼画弧" scheme="https://amonxu.com/categories/%E9%AC%BC%E7%94%BB%E5%BC%A7/"/>
    
    
      <category term="拾忆集" scheme="https://amonxu.com/tags/%E6%8B%BE%E5%BF%86%E9%9B%86/"/>
    
      <category term="随笔" scheme="https://amonxu.com/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>商业案例——如何“快速体面”地退出市场</title>
    <link href="https://amonxu.com/2021/03/25/zh-CN/2021-03-25-Made-Stupid-Again/"/>
    <id>https://amonxu.com/2021/03/25/zh-CN/2021-03-25-Made-Stupid-Again/</id>
    <published>2021-03-25T13:26:33.000Z</published>
    <updated>2023-09-04T09:56:40.000Z</updated>
    
    <content type="html"><![CDATA[<p>Boss：“近几年，人傻钱多不太好使，开始嫌弃我们是洋垃圾品牌。我们总不能等到灰溜溜打包走人那一天，想个辙吧，我想光速从这消失”<br>“公告：拒绝使用xj棉花”<br>（一夜消失）<br>Boss：“道理我都懂，我问你这脸上的404从哪来的”</p><p><img src="https://z3.ax1x.com/2021/03/25/6XUPWF.png" alt="image 20210325212538940"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Boss：“近几年，人傻钱多不太好使，开始嫌弃我们是洋垃圾品牌。我们总不能等到灰溜溜打包走人那一天，想个辙吧，我想光速从这消失”&lt;br&gt;“公告：拒绝使用xj棉花”&lt;br&gt;（一夜消失）&lt;br&gt;Boss：“道理我都懂，我问你这脸上的404从哪来的”&lt;/p&gt;
&lt;p&gt;&lt;img sr
      
    
    </summary>
    
      <category term="鬼画弧" scheme="https://amonxu.com/categories/%E9%AC%BC%E7%94%BB%E5%BC%A7/"/>
    
    
      <category term="随笔" scheme="https://amonxu.com/tags/%E9%9A%8F%E7%AC%94/"/>
    
      <category term="商业失败案例" scheme="https://amonxu.com/tags/%E5%95%86%E4%B8%9A%E5%A4%B1%E8%B4%A5%E6%A1%88%E4%BE%8B/"/>
    
  </entry>
  
  <entry>
    <title>我的 2021-1 读书清单（小说类2）</title>
    <link href="https://amonxu.com/2021/03/04/zh-CN/2021-03-04-2020-Wu-Xia/"/>
    <id>https://amonxu.com/2021/03/04/zh-CN/2021-03-04-2020-Wu-Xia/</id>
    <published>2021-03-04T14:22:22.000Z</published>
    <updated>2023-09-04T09:56:44.000Z</updated>
    
    <content type="html"><![CDATA[<p>《射雕英雄传》</p><p><img src="https://ss3.baidu.com/9fo3dSag_xI4khGko9WTAnF6hhy/zhidao/pic/item/1b4c510fd9f9d72ae2b9e7afdf2a2834359bbba7.jpg" alt="img" style="zoom:80%;"></p><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=25638777&auto=1&height=66"></iframe><p>和很多小男孩一样，小时候我是个十足的武侠迷，常常幻想着飞檐走壁，劫富济贫，弹指间敌人灰飞烟灭，最后厌倦了江湖的尔虞我诈，携美人退隐山林，过着哥虽不在江湖但江湖有哥传说的日子。</p><p>不知从何时起，逐渐意识到电视上的高手都是演员，飞檐走壁是吊了威亚，降龙十八掌是加了特效，鹤顶红、断肠散之流可能是道具饮料，甚至被坏人害死的人趁着观众哭泣的时候在对盒饭大快朵颐…然后，慢慢洗去了身体和心理上的武侠气息，不再准备仗剑走天涯，安心做个阳光宅男。</p><p>又不知多少年后，一个动荡的2020年，偶然翻出一本《射雕英雄传》，一发不可收拾地扎入了消失已久的武侠世界中。</p><p>这个世界，人们好讲武德，话不投机拳脚上比高低，毋庸顾虑太多，不服就干。人们别无他求，只为获得绝世武功，扬名立万。身首异处，在所不惜。</p><p>射雕英雄传，本质上是讲一个刻意练习的案例，天资愚钝的郭靖，凭借着自己超乎寻常的刻苦训练，和全真七子、江南七怪、洪七公、黄蓉等各路名家大师，以及科学的方法，最终成为武学翘楚。</p><p>又想到，郭靖成为一代高手，又与世上绝顶聪明的黄蓉在一起，却也最后落个师父各个惨死桃花岛，桃花岛人去岛空。二人跟随成吉思汗大军西征，建功立业可谓信手拈来，然而大汗驾崩之后，二人也自枯草和白骨之间，返回故土。</p><p>可见武侠世界也并非为所欲为，亦然有悲欢离合，大侠亦然会失去亲情友情，荣华富贵皆过眼烟云。凡世间的那点苦痛，又算几何。</p><p>未完待续…</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;《射雕英雄传》&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://ss3.baidu.com/9fo3dSag_xI4khGko9WTAnF6hhy/zhidao/pic/item/1b4c510fd9f9d72ae2b9e7afdf2a2834359bbba7.jpg&quot; 
      
    
    </summary>
    
      <category term="书" scheme="https://amonxu.com/categories/%E4%B9%A6/"/>
    
    
      <category term="随笔" scheme="https://amonxu.com/tags/%E9%9A%8F%E7%AC%94/"/>
    
      <category term="小说" scheme="https://amonxu.com/tags/%E5%B0%8F%E8%AF%B4/"/>
    
      <category term="读书笔记" scheme="https://amonxu.com/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
      <category term="2020" scheme="https://amonxu.com/tags/2020/"/>
    
  </entry>
  
</feed>
